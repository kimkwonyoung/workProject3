<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<resultMap id="BaseResultMap" type="boardVO">
	
	<result column="board_num" jdbcType="NUMERIC" property="boardNum" />
    <result column="mem_id" jdbcType="VARCHAR" property="memId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="reg_date" jdbcType="TIMESTAMP" property="regDate" />
    <result column="mod_date" jdbcType="TIMESTAMP" property="modDate" />
    <result column="view_count" jdbcType="NUMERIC" property="viewCount" />
	
	</resultMap>
	<sql id="select">
		board_num, mem_id, title, content, reg_date, mod_date, view_count, pid
	</sql>
	
	<sql id="whereClause">
		<trim prefix="where" prefixOverrides="and">
			<if test="searchWord != null and searchWord != ''">
				<choose>
					<when test="type1 == 'title'">
						and title like concat(concat('%', #{searchWord}), '%')
					</when>
					<when test="type1 == 'mem_id'">
						and mem_id like concat(concat('%', #{searchWord}), '%')
					</when>
					<otherwise>
						and (title like concat(concat('%', #{searchWord}), '%') or mem_id like concat(concat('%', #{searchWord}), '%')
					</otherwise>
				</choose>
			</if>
		</trim>
	</sql>
	
	<select id="selectMainBoard" resultType="boardVO">
		select
		level, <include refid="select" /> 
		from  board
		<![CDATA[ where rownum <= 5 ]]>
		start with pid=0
		CONNECT BY PRIOR board_num = pid
		order SIBLINGS by board_num desc
	</select>
	
	
	<select id="totalCount" parameterType="search" resultType="int">
		select count(*)
		from board
		<include refid="whereClause" />
	</select>

	<select id="selectBoardList" parameterType="search" resultType="boardVO">
		<include refid="paging.top" />
		select 
    	level, pid, board_num, mem_id, title, content, reg_date, mod_date, view_count
		from board
		<include refid="whereClause" />
		start with pid=0
		CONNECT BY PRIOR board_num = pid
		order SIBLINGS by board_num desc
		<include refid="paging.bottom" />
	</select>
	
	<select id="selectOneRow" parameterType="boardVO" resultType="boardVO">
		select
		<include refid="select" />
		from board
		where board_num = #{boardNum}
	</select>
	
	<select id="selectNewOneRow" resultType="boardVO">
		select
			<include refid="select" />
		from (
				select * 
				from board
				start with pid=0
        		CONNECT BY PRIOR board_num = pid
        		order SIBLINGS by board_num desc
			)
		where rownum = 1
	</select>
	
	<select id="selectLastrow" parameterType="search" resultType="boardVO">
		select
			<include refid="select" />
		from (
			select * 
			from board
			start with pid=0
        	CONNECT BY PRIOR board_num = pid
        	order SIBLINGS by board_num desc
			)
	<![CDATA[
 		where rownum = 1
 	]]>  
	</select>
	

	
	<update id="updateViewcount" parameterType="boardVO">
		update board 
		set 
		view_count = view_count + 1 
		where board_num = #{boardNum}
	</update>
	
	<update id="updateBoard" parameterType="boardVO">
		update board 
		set title = #{title}, content = #{content}, mod_date = SYSTIMESTAMP
		where board_num = #{boardNum}
	</update>
	
	<insert id="insertBoard" parameterType="boardVO">
		insert into board(
			board_num, mem_id, title, content
		) 
		values(
			board_num.nextval, #{memId}, #{title}, #{content}
		)
	</insert>
	
	<insert id="insertBoardReply" parameterType="boardVO">
		<selectKey keyProperty="boardNum" resultType="int"  order="BEFORE">
			select 
				board_num.nextval boardNum 
			from dual
		</selectKey>
		INSERT INTO board (
			  pid
			, board_num
			, title
			, content
			, mem_id
		) VALUES (
		      #{pid} 
			, #{boardNum}
			, #{title}
			, #{content}
			, #{memId}
		)
	</insert>
	
	<delete id="deleteBoard" parameterType="search">
	 	
		delete from board
		where board_num = #{scBoardNum} or pid = #{scBoardNum}
	
	</delete>
	

	
	<delete id="deleteBoardchkbox" parameterType="search" >
		delete from board 
		where board_num in
		<foreach item="boardnum" collection="numlist"  open="("  separator="," close=")"> 
			#{boardnum}		
		</foreach>
		or
		pid in 
		<foreach item="boardnum" collection="numlist"  open="("  separator="," close=")"> 
			#{boardnum}		
		</foreach>
	</delete>

	
</mapper>