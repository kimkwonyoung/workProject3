<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<sql id="select">
		membernum, memberid, pwd, name, phone
	</sql>
	
	<select id="selectMemberList" parameterType="search" resultType="memberVO">
		select
		<include refid="select" /> 
		from (
			select membernum, memberid, pwd, name, phone
			from member
			where membernum != 0
		<if test="scMemNum > 0">
		<![CDATA[	
			and membernum < #{scMemNum}    
		]]>
		</if>
			order by membernum desc ) 
		<![CDATA[
			where rownum <= 10
		]]>
	</select>
	
	<select id="selectMemberOneRow" resultType="memberVO">
		select 
		<include refid="select" />
		from (
    			select membernum, memberid, pwd, name, phone
    			from member 
    			order by membernum desc 
			) where rownum = 1
	</select>
	
	<select id="selectMemberId" parameterType="String" resultType="memberVO">
		select
		<include refid="select" />
		from member 
		where memberid = #{memberid}
	</select>
	
	<select id="selectMemberNum" parameterType="int" resultType="memberVO">
		select
		<include refid="select" />
		from member
		where membernum = #{membernum}
	</select>
	
	<select id="selectSearchId" parameterType="memberVO" resultType="memberVO">
		select 
		<include refid="select" /> 
		from member 
		where name = #{name} 
		and phone = #{phone}
	</select>
	
	<select id="selectSearchPwd" parameterType="memberVO" resultType="memberVO">
		select 
		<include refid="select" /> 
		from member 
		where memberid = #{memberid} 
		and name = #{name}
	</select>
	
	<select id="selectbyCount" parameterType="String" resultType="int">
		select count(*)
		from member
		where memberid = #{memberid}
	</select>
	
	<insert id="callMemberInsert" parameterType="memberVO">
        {call member_insert(
            #{memberid, jdbcType=VARCHAR},
            #{name, jdbcType=VARCHAR},
            #{pwd, jdbcType=VARCHAR},
            #{phone, jdbcType=VARCHAR}
        )}
    </insert>
    
    <update id="callMemberUpdate" parameterType="memberVO">
    	{call member_update(
	    	#{name, jdbcType=VARCHAR}, 
	    	#{pwd, jdbcType=VARCHAR}, 
	    	#{phone, jdbcType=VARCHAR}, 
	    	#{membernum, jdbcType=INTEGER}
    	)}
    
    </update>
    
     <delete id="deleteMember" parameterType="String">
        {call member_delete(
        	#{memberid, jdbcType=VARCHAR}
        )}
    </delete>
	
	
</mapper>