<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="notice">
	<resultMap id="BaseResultMap" type="noticeVO">
	
	<result column="notice_num" jdbcType="NUMERIC" property="noticeNum" />
    <result column="mem_id" jdbcType="VARCHAR" property="memId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="reg_date" jdbcType="TIMESTAMP" property="regDate" />
    <result column="mod_date" jdbcType="TIMESTAMP" property="modDate" />
    <result column="view_count" jdbcType="NUMERIC" property="viewCount" />
    <result column="fixed_yn" jdbcType="VARCHAR" property="fixedYn" />
	
	</resultMap>
	
	<sql id="select">
		notice_num, mem_id, title, content, reg_date, mod_date, view_count, fixed_yn
	</sql>
	
	<sql id="whereClause">
		<trim prefix="where" prefixOverrides="and">
			<if test="searchWord != null and searchWord != ''">
				<choose>
					<when test="type1 == 'title'">
						and title like concat(concat('%', #{searchWord}), '%')
					</when>
					<when test="type1 == 'mem_id'">
						and mem_id like concat(concat('%', #{searchWord}), '%')
					</when>
					<otherwise>
						and (title like concat(concat('%', #{searchWord}), '%') or mem_id like concat(concat('%', #{searchWord}), '%')
					</otherwise>
				</choose>
			</if>
		</trim>
	</sql>
	
	<select id="selectMainNotice" resultType="noticeVO">
		select
		<include refid="select" /> 
		from (
	            select /*+ INDEX_desc(a PK_NOTICE) */ 
	            	a.*, rownum as rn
				from notice a
				where fixed_yn='Y'
	            order by mod_date desc )
		<![CDATA[
			where rn <= 5 
		]]>
	</select>
	
	<select id="totalCount" parameterType="search" resultType="int">
		select count(*)
		from notice
		<include refid="whereClause" />
	</select>

	<select id="selectNoticeList" parameterType="search" resultType="noticeVO">
		<include refid="paging.top" />
		select /*+ index_desc(a PK_NOTICE) */ a.*
		from notice a
		<include refid="whereClause" />
		<choose>
			<when test="orderBy != ''">
				order by ${orderBy }
			</when>
			<otherwise>
				order by fixed_yn desc
			</otherwise>
		</choose>
		<include refid="paging.bottom" />
	</select>
	
	<select id="selectOneRow" parameterType="noticeVO">
		select
		<include refid="select" />
		from notice
		where notice_num = #{noticeNum}
	
	</select>
	
	<update id="noticeUpdate" parameterType="noticeVO">
		update notice set 
		title = #{title}, content = #{content}, mod_date = SYSTIMESTAMP, 
		fixed_yn = #{fixedYn} 
		where notice_num = #{noticeNum}
	</update>

	
</mapper>